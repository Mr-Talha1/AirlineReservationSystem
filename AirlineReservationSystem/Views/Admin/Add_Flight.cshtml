@model AirlineReservationSystem.Models.Flight

@{

    Layout = "_AdminLayout";
}
<link href="~/css/imageUpload.css" rel="stylesheet">
    <div class="pagetitle">
      <h1>Add Flight</h1>
    </div><!-- End Page Title -->

    <section class="section">
      <div class="row">
        <div class="col-lg-12">

          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Add A New Flight</h5>
                  
              <!-- Custom Styled Validation -->
                    <form class="row g-3 needs-validation" novalidate asp-action="Add_Flight" asp-controller="Admin">
                <div class="col-md-4">
                  <label for="validationCustom01" class="form-label">Flight Number</label>
                  <input type="text" class="form-control" id="validationCustom01" required asp-for="FlightNumber">
                @*   <div class="valid-feedback">
                    Looks good!
                  </div> *@
                            <div class="my-3">
                            @if (TempData["FlightError"] != null)
                            {
                                <div class="alert alert-danger d-flex align-items-center gap-3" role="alert">
                                    <i class="bi bi-exclamation-triangle-fill fs-4"></i>
                                    @TempData["FlightError"]
                                </div>
                            }
                            </div>
                            <div class="invalid-feedback">
                                Please type a valid Flight Number.
                            </div>
                </div>
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">Airline Name</label>
                            <select class="form-select" id="validationCustom04" required asp-for="AirlineId" asp-items="ViewBag.AirlineId">
                                <option selected disabled value="">----------- Select Airline Name -----------</option>
                                
                            </select>
                            <div class="invalid-feedback">
                                Please select a valid Airline Name.
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">OriginCity Name </label>
                            <select class="form-select" id="validationCustom04" required asp-for="OriginCityId" asp-items="ViewBag.OriginCityId">
                                <option selected disabled value="">----------- Select OriginCity Name -----------</option>
                             
                            </select>

                            <div class="invalid-feedback">
                                Please select a valid OriginCity Name.
                            </div>
                            <div class="my-3">
                                @if (TempData["originError"] != null)
                                {
                                    <div class="alert alert-danger d-flex align-items-center gap-3" role="alert">
                                        <i class="bi bi-exclamation-triangle-fill fs-4"></i>
                                        @TempData["originError"]
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">DestinationCity Name</label>
                            <select class="form-select" id="validationCustom04" required asp-for="DestinationCityId" asp-items="ViewBag.DestinationCityId">
                                <option selected disabled value="">--- Select DestinationCity Name ---</option>
                          
                            </select>
                            <div class="invalid-feedback">
                                Please select a valid DestinationCity Name.
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">Coach</label>
                            <select class="form-select" id="validationCustom04" required asp-for="CoachId" asp-items="ViewBag.CoachID">
                                <option selected disabled value="">---------- Select Coach Name -----------</option>
                                
                            </select>
                            <div class="invalid-feedback">
                                Please select a valid Class.
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">Departure Time</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend"></span>
                                <input type="datetime-local" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required asp-for="DepartureTime">
                                <div class="invalid-feedback">
                                    Please choose a Departure Time.
                                </div>
                            </div>
                        </div> 
                        <div class="col-md-4">
                            <label for="validationCustom04" class="form-label">Arrival Time</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend"></span>
                                <input type="datetime-local" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required asp-for="ArrivalTime">
                                <div class="invalid-feedback">
                                    Please choose a Arrival Time.
                                </div>
                            </div>
                        </div>
                
                <div class="col-md-4">
                  <label for="validationCustomUsername" class="form-label">Total Seats</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"></span>
                                <input type="number" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required asp-for="TotalSeats" min="0">
                    <div class="invalid-feedback">
                                    Please type a Total Seats.
                    </div>
                  </div>
                </div>
                        <div class="col-md-4">
                            <label for="validationCustomUsername" class="form-label">Sky Miles</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend"></span>
                                <input type="number" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required asp-for="SkyMiles" min="0">
                                <div class="invalid-feedback">
                                    Please type a Sky Miles.
                                </div>
                            </div>
                        </div>
                       
                        <div class="col-md-4">
                            <label for="validationCustomUsername" class="form-label">Stops</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend"></span>
                                <input type="number" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required asp-for="Stops" min="0">
                                <div class="invalid-feedback">
                                    Please type a Stops.
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="validationCustomUsername" class="form-label">Price</label>
                            <div class="input-group has-validation">
                                <span class="input-group-text" id="inputGroupPrepend"></span>
                                <input type="number" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required asp-for="Price" min="0">
                                <div class="invalid-feedback">
                                    Please type a Price.
                                </div>
                            </div>
                        </div>

          








                        @*<div class="form-group">
                            <label for="citySearch">Enter City Name:</label>
                            <input type="text" id="citySearch" class="form-control" placeholder="Enter city name" />
                        </div>

                        <div class="form-group">
                            <label for="countryDisplay">Country Name:</label>
                            <input type="text" id="countryDisplay" class="form-control" readonly />
                        </div>

                        @section Scripts {
                            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                            <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
                            <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

                            <script type="text/javascript">
                                $(document).ready(function () {
                                    $("#citySearch").autocomplete({
                                        source: function (request, response) {
                                            $.ajax({
                                                url: '@Url.Action("GetCities", "Admin")',
                                                type: "GET",
                                                dataType: "json",
                                                data: { term: request.term },
                                                success: function (data) {
                                                    response($.map(data, function (item) {
                                                        return {
                                                            label: item.CityName + ", " + item.CountryName, // Shows City and Country in suggestions
                                                            value: item.CityName, // Only CityName will be selected in the textbox
                                                            country: item.CountryName // Store CountryName for later use
                                                        };
                                                    }));
                                                }
                                            });
                                        },
                                        minLength: 2,
                                        select: function (event, ui) {
                                            // Set the city name in the text box
                                            $("#citySearch").val(ui.item.value);
                                            // Set the corresponding country name in the other text box
                                            $("#countryDisplay").val(ui.item.country);
                                            return false;
                                        }
                                    });
                                });
                            </script>
                        } *@




                     
                        <div class="col-12 d-flex justify-content-end">
                  <button class="btn btn-primary w-100" type="submit">Add Flight</button>
                </div>
              </form><!-- End Custom Styled Validation -->

            </div>
          </div>

         
        </div>
      </div>
    </section>
<script>
    function initImageUpload(box) {
        let uploadField = box.querySelector('.image-upload');

        uploadField.addEventListener('change', getFile);

        function getFile(e) {
            let file = e.currentTarget.files[0];
            checkType(file);
        }

        function previewImage(file) {
            let thumb = box.querySelector('.js--image-preview'),
                reader = new FileReader();

            reader.onload = function () {
                thumb.style.backgroundImage = 'url(' + reader.result + ')';
            }
            reader.readAsDataURL(file);
            thumb.className += ' js--no-default';
        }

        function checkType(file) {
            let imageType = /image.*/;
            if (!file.type.match(imageType)) {
                throw 'Datei ist kein Bild';
            } else if (!file) {
                throw 'Kein Bild gewählt';
            } else {
                previewImage(file);
            }
        }

    }

    // initialize box-scope
    var boxes = document.querySelectorAll('.box');

    for (let i = 0; i < boxes.length; i++) {
        let box = boxes[i];
        initDropEffect(box);
        initImageUpload(box);
    }



    /// drop-effect
    function initDropEffect(box) {
        let area, drop, areaWidth, areaHeight, maxDistance, dropWidth, dropHeight, x, y;

        // get clickable area for drop effect
        area = box.querySelector('.js--image-preview');
        area.addEventListener('click', fireRipple);

        function fireRipple(e) {
            area = e.currentTarget
            // create drop
            if (!drop) {
                drop = document.createElement('span');
                drop.className = 'drop';
                this.appendChild(drop);
            }
            // reset animate class
            drop.className = 'drop';

            // calculate dimensions of area (longest side)
            areaWidth = getComputedStyle(this, null).getPropertyValue("width");
            areaHeight = getComputedStyle(this, null).getPropertyValue("height");
            maxDistance = Math.max(parseInt(areaWidth, 10), parseInt(areaHeight, 10));

            // set drop dimensions to fill area
            drop.style.width = maxDistance + 'px';
            drop.style.height = maxDistance + 'px';

            // calculate dimensions of drop
            dropWidth = getComputedStyle(this, null).getPropertyValue("width");
            dropHeight = getComputedStyle(this, null).getPropertyValue("height");

            // calculate relative coordinates of click
            // logic: click coordinates relative to page - parent's position relative to page - half of self height/width to make it controllable from the center
            x = e.pageX - this.offsetLeft - (parseInt(dropWidth, 10) / 2);
            y = e.pageY - this.offsetTop - (parseInt(dropHeight, 10) / 2) - 30;

            // position drop and animate
            drop.style.top = y + 'px';
            drop.style.left = x + 'px';
            drop.className += ' animate';
            e.stopPropagation();

        }
    }

</script>
