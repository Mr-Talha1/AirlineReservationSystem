@model AirlineReservationSystem.Models.Airline
@{
    Layout = "_AdminLayout";
}

<link href="~/css/imageUpload.css" rel="stylesheet">
<div class="pagetitle">
    <h1>Add Airline</h1>
</div><!-- End Page Title -->

<section class="section">
    <div class="row">
        <div class="col-lg-12">

            <div class="card">
                <div class="card-body">
                    <form class="row g-3 needs-validation" novalidate asp-controller="Admin" asp-action="Add_Airline" enctype="multipart/form-data">

                    <h5 class="card-title">Add A New Airline</h5>
                    <div class="col-lg-12">
                        <div class="box" style="margin-bottom:10px;">
                            <div class="js--image-preview"></div>
                            <div class="upload-options">
                                <label>
                                    <input type="file" required class="image-upload" accept="image/*" asp-for="AilrineImagePath">
                                        <span asp-validation-for="AilrineImagePath" class="text-danger"></span>
                                </label>
                            </div>

                        </div>
                    </div>
                    <!-- Custom Styled Validation -->
                   
                        <div class="col-md-4">
                            <label for="validationCustom01" class="form-label">Airline Name</label>
                            <input type="text" class="form-control" id="validationCustom01" required asp-for="AirlineName">
                            <span asp-validation-for="AirlineName" class="text-danger"></span>
                            <div class="valid-feedback">
                                Looks good!
                            </div>
                        </div>
                        <div class="my-3">
                            @if (TempData["airlineError"] != null)
                            {
                                <div class="alert alert-danger d-flex align-items-center gap-3" role="alert">
                                    <i class="bi bi-exclamation-triangle-fill fs-4"></i>
                                    @TempData["airlineError"]
                                </div>
                            }
                        </div>
                         <div class="col-12 d-flex justify-content-end">
                            <button class="btn btn-primary w-100" type="submit">Add Airline</button>
                        </div>
                    </form><!-- End Custom Styled Validation -->

                </div>

            </div>


        </div>
    </div>
</section>
<script>
    function initImageUpload(box) {
        let uploadField = box.querySelector('.image-upload');

        uploadField.addEventListener('change', getFile);

        function getFile(e) {
            let file = e.currentTarget.files[0];
            checkType(file);
        }

        function previewImage(file) {
            let thumb = box.querySelector('.js--image-preview'),
                reader = new FileReader();

            reader.onload = function () {
                thumb.style.backgroundImage = 'url(' + reader.result + ')';
            }
            reader.readAsDataURL(file);
            thumb.className += ' js--no-default';
        }

        function checkType(file) {
            let imageType = /image.*/;
            if (!file.type.match(imageType)) {
                throw 'Datei ist kein Bild';
            } else if (!file) {
                throw 'Kein Bild gewählt';
            } else {
                previewImage(file);
            }
        }

    }

    // initialize box-scope
    var boxes = document.querySelectorAll('.box');

    for (let i = 0; i < boxes.length; i++) {
        let box = boxes[i];
        initDropEffect(box);
        initImageUpload(box);
    }



    /// drop-effect
    function initDropEffect(box) {
        let area, drop, areaWidth, areaHeight, maxDistance, dropWidth, dropHeight, x, y;

        // get clickable area for drop effect
        area = box.querySelector('.js--image-preview');
        area.addEventListener('click', fireRipple);

        function fireRipple(e) {
            area = e.currentTarget
            // create drop
            if (!drop) {
                drop = document.createElement('span');
                drop.className = 'drop';
                this.appendChild(drop);
            }
            // reset animate class
            drop.className = 'drop';

            // calculate dimensions of area (longest side)
            areaWidth = getComputedStyle(this, null).getPropertyValue("width");
            areaHeight = getComputedStyle(this, null).getPropertyValue("height");
            maxDistance = Math.max(parseInt(areaWidth, 10), parseInt(areaHeight, 10));

            // set drop dimensions to fill area
            drop.style.width = maxDistance + 'px';
            drop.style.height = maxDistance + 'px';

            // calculate dimensions of drop
            dropWidth = getComputedStyle(this, null).getPropertyValue("width");
            dropHeight = getComputedStyle(this, null).getPropertyValue("height");

            // calculate relative coordinates of click
            // logic: click coordinates relative to page - parent's position relative to page - half of self height/width to make it controllable from the center
            x = e.pageX - this.offsetLeft - (parseInt(dropWidth, 10) / 2);
            y = e.pageY - this.offsetTop - (parseInt(dropHeight, 10) / 2) - 30;

            // position drop and animate
            drop.style.top = y + 'px';
            drop.style.left = x + 'px';
            drop.className += ' animate';
            e.stopPropagation();

        }
    }

</script>
